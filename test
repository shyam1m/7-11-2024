terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

# Configure the AWS Provider
provider "aws" {
  region = "ap south-1"
}

resource "aws_vpc" "myvpc" {
  cidr_block       = "10.0.0.0/16"
  instance_tenancy = "default"

  tags = {
    Name = "my-vpc"
  }
}


resource "aws_subnet" "pubsub" {
  vpc_id     = aws_vpc.myvpc.id
  cidr_block = "10.0.1.0/24"
  availability_zone = "ap-south-1a"

  tags = {
    Name = "my-vpc-pub-sub"
  }
}

resource "aws_subnet" "prisub" {
  vpc_id     = aws_vpc.myvpc.id
  cidr_block = "10.0.2.0/24"
  availability_zone = "ap-south-1b"

  tags = {
    Name = "my-vpc-pub-sub"
  }
}

resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.myvpc.id

  tags = {
    Name = "my-vpc-igw"
  }
}

resource"aws_route_tables" "pubrt" {
  vpc_id = aws_vpc.myvpc.id

  route {
      cidr_block = "0.0.0.0/0" 
      gateway_id = aws_internet_gateway.tigw.id
    }

    tags = {
      Name = "My-vpc_table"pubrt" {
    }
  } 
  
  resource "aws_route_table_association" "pubrasso" {
    subnet_id      = aws_subnet.pubsub.id
    route_table_id = aws_route_table.pubrt.id
  }
  
  resource "aws_eip" "myeip" {
    vpc   = true

  }  


  resource "aws_nat_gateway" "tnat" {
    allocation_id = aws_eip.example.id
    subnet_id     = aws_subnet.pubsub.id
  
    tags = {
      Name = "my-vpc-nat"
    }
  
   

  resource"aws_route_tables" "prirt" {
    vpc_id = aws_vpc.myvpc.id
  
    route {
       cidr_block = "0.0.0.0/0" 
       gateway_id = aws_internet_gateway.tnat.id
     }
  
      tags = {
        Name = "My-vpc_pri-rT"
      }
    }    

    resource "aws_route_table_association" "pubrasso" {
      subnet_id      = aws_subnet.prisub.id
      route_table_id = aws_route_table.prirt.id
    }
    

    resource "aws_security_group" "allow_all" {
      name        = "allow_all"
      description = "Allow TLS inbound traffic and all outbound traffic"
      vpc_id      = aws_vpc.myvpcid
    
      tags = {
        Name = "allow_all"
      }
    }
    
    resource "aws_vpc_security_group_ingress_rule" "allow_all" {
      security_group_id = aws_security_group.allow_all.id
      cidr_ipv4         = ["0.0.0.0/0"]
      from_port         = 22
      ip_protocol       = "tcp"
      to_port           = 22  
     }
    
     resource "aws_vpc_security_group_ingress_rule" "allow_all" {
      security_group_id = aws_security_group.allow_all.id
      cidr_ipv4         = ["0.0.0.0/0"]
      from_port         = 80
      ip_protocol       = "tcp"
      to_port           = 80  
     }
    
    

    resource "aws_vpc_security_group_egress_rule" "allow_all_traffic_ipv4" {
      security_group_id = aws_security_group.allow_all.id
      cidr_ipv4         = "0.0.0.0/0"
      ip_protocol       = "-1" # semantically equ
    
    }
    
    resource "aws_instance" "Jumpbox"  {
    ami                          = "ami-0ac9397cab55f5044"
    instance_type                = "t2.micro"
    subnet_id                    = aws_subnet.pubsub.id
    vpc_security_group_ids       = [aws_security_group.allow_all.id]
    key_name                     ="singapore"
    associate_public_ip_address  =true

    
    resource "aws_instance" "instance2 "  {
    ami                          = "ami-0ac9397cab55f5044"
    instance_type                = "t2.micro"
    subnet_id                    = aws_subnet.prisub.id
    vpc_security_group_ids       = [aws_security_group.allow_all.id]
    key_name                     ="singapore"
    associate_public_ip_address  =true
